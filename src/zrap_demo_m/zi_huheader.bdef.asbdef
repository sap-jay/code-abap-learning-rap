managed;//
//strict ( 2 );

define behavior for ZI_HUHeader alias Header
implementation in class zcl_bdef_huheader unique
persistent table zgmhuhdr
lock master
authorization master ( instance, global )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  association _Item { create; }

  field ( numbering : managed, readonly ) GuidHu;
  field ( readonly ) Status;
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  action ( features : instance ) setHUStatus result [1] $self;
  internal action notifyHUPacked;

  determination setInitialStatus on modify { create; }

  validation validateCustomer on save { field Kunnr; create; }

  mapping for zgmhuhdr
    {
      GuidHu             = guid_hu;
      Tanum              = tanum;
      Huident            = huident;
      Lgnum              = lgnum;
      Letyp              = letyp;
      Kunnr              = kunnr;
      Scode              = scode;
      Status             = status;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for ZI_HUItem alias Item
implementation in class zcl_bdef_huitem unique
persistent table zgmhuitm
lock dependent by _Header
authorization dependent by _Header
etag master LocalLastChangedAt
{
  update;
  delete;

  field ( numbering : managed, readonly ) GuidStock;
  field ( readonly ) GuidHu;
  field ( readonly ) CreatedBy, LastChangedBy, LocalLastChangedAt;

  determination setdocguid on save { create; field Docid, Docitmid; }
  association _Header;

  mapping for zgmhuitm
    {
      GuidStock          = guid_stock;
      GuidHu             = guid_hu;
      Matnr              = matnr;
      Charg              = charg;
      Quan               = quan;
      Meins              = meins;
      CurrencyCode       = currency_code;
      Docid              = docid;
      Docitmid           = docitmid;
      CreatedBy          = created_by;
      LastChangedBy      = last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
    }
}